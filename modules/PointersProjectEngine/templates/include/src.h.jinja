// note that in these two lines, the "substitute" should be in all-caps
#ifndef __{{ project_name }}
#define __{{ project_name }}

typedef struct {{ container_name }} {{ container_name }};
typedef struct {{ linked_list_name }} {{ linked_list_name }};
typedef struct {{ container_type }} {{ container_type }};

// Represents a {{ container_name }}.
struct {{ container_name }} {
  char* name;
  {{ linked_list_name }}* list;
};

// Represents a node in the linked list.
struct {{ linked_list_name }} {
  {{ container_type }}* {{ item_name }};
  {{ linked_list_name }}* next;
};

// Represents a {{ item_name }} and its {{ container_name }}.
struct {{ container_type }} {
  char* {{ item_name }}_name;
  char* {{ container_name }};
};

int {{ container_name }}_add({{ container_name }} {{ project_name }}[], int number_of_{{ container_name }}, {{ container_type }} {{ item_name }}[],
                 int number_of_{{ item_name }}, const char* {{ item_name }}_name);
{{ container_type }}* {{ container_name }}_remove({{ container_name }} {{ project_name }}[], int number_of_{{ container_name }},
                          const char* {{ container_name }}, const char* {{ item_name }}_name);
{{ container_type }}* {{ container_name }}_change({{ container_name }} {{ project_name }}[], int number_of_{{ container_name }},
                          {{ container_type }} {{ item_name }}[], int number_of_{{ item_name }},
                          const char* {{ item_name }}_name, const char* old_{{ container_name }},
                          const char* new_{{ container_name }});

#endif